aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_histogram(binwidth = 0.05, boundary = 0) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 20),
limits = c(0, 1)) +
theme_simpsons()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_histogram(binwidth = 0.05, boundary = 0) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 20),
limits = c(0, 1)) +
theme_zelda()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_histogram(binwidth = 0.05, boundary = 0) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 20),
limits = c(0, 1)) +
theme_friends()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_histogram(binwidth = 0.05, boundary = 0) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 20),
limits = c(0, 1)) +
theme_gameofthrones()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_histogram(binwidth = 0.05, boundary = 0) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 20),
limits = c(0, 1)) +
theme_friends()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_histogram(binwidth = 0.1, boundary = 0) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1)) +
theme_friends()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_histogram(binwidth = 0.1, boundary = 0) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1)) +
theme_friends() +
labels(x = "Score")
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_histogram(binwidth = 0.1, boundary = 0) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1)) +
theme_friends() +
labs(x = "AMP Score")
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_histogram(binwidth = 0.1, boundary = 0) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1),
label = "AMP Score") +
theme_friends()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_histogram(binwidth = 0.1, boundary = 0) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1),
labels = "AMP Score") +
theme_friends()
?geom_vline()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_histogram(binwidth = 0.1, boundary = 0) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1)) +
theme_friends() +
geom_vline(xintercept = mean(data_after_exclusions$amp_score))
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_histogram(binwidth = 0.1, boundary = 0) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1)) +
geom_vline(xintercept = mean(data_after_exclusions$amp_score)) +
theme_apa() +
```
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_histogram(binwidth = 0.1, boundary = 0) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1)) +
geom_vline(xintercept = mean(data_after_exclusions$amp_score)) +
theme_apa()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_histogram(binwidth = 0.1, boundary = 0) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1)) +
geom_vline(xintercept = mean(data_after_exclusions$amp_score)) +
theme_friends()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_histogram(binwidth = 0.1, boundary = 0) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1)) +
scale_x_continuous(breaks = scales::breaks_pretty(n = 5),
limits = c(0, 60)) +
geom_vline(xintercept = mean(data_after_exclusions$amp_score)) +
theme_friends()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_histogram(binwidth = 0.1, boundary = 0) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1)) +
scale_y_continuous(breaks = scales::breaks_pretty(n = 5),
limits = c(0, 60)) +
geom_vline(xintercept = mean(data_after_exclusions$amp_score)) +
theme_friends()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_histogram(binwidth = 0.1, boundary = 0) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1),
labs = "AMP Score") +
scale_y_continuous(breaks = scales::breaks_pretty(n = 5),
limits = c(0, 60)) +
geom_vline(xintercept = mean(data_after_exclusions$amp_score)) +
theme_friends()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_histogram(binwidth = 0.1, boundary = 0) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1),
name = "AMP Score") +
scale_y_continuous(breaks = scales::breaks_pretty(n = 5),
limits = c(0, 60)) +
geom_vline(xintercept = mean(data_after_exclusions$amp_score)) +
theme_friends()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_histogram(binwidth = 0.1, boundary = 0) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1),
name = "AMP Score") +
scale_y_continuous(breaks = scales::breaks_pretty(n = 5),
limits = c(0, 60),
name = "Amount") +
geom_vline(xintercept = mean(data_after_exclusions$amp_score)) +
theme_friends()
ggplot(data = data_after_exclusions,
aes(x = mean_self_report)) +
geom_histogram(binwidth = 0.1, boundary = 0) +
# more intelligent choices for the binwidth and boundary
geom_density(adjust = 1, # the degree of smoothing can be adjusted here
color = "#FF69B4",
fill = "darkblue",
alpha = 0.3) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 7),
limits = c(1, 7)) +
theme_minimal()
ggplot(data = data_after_exclusions,
aes(x = mean_self_report)) +
geom_histogram(binwidth = 0.1, boundary = 0) +
# more intelligent choices for the binwidth and boundary
geom_density(adjust = 0.0001, # the degree of smoothing can be adjusted here
color = "#FF69B4",
fill = "darkblue",
alpha = 0.3) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 7),
limits = c(1, 7)) +
theme_minimal()
ggplot(data = data_after_exclusions,
aes(x = mean_self_report)) +
geom_histogram(binwidth = 0.1, boundary = 0) +
# more intelligent choices for the binwidth and boundary
geom_density(adjust = 0.01, # the degree of smoothing can be adjusted here
color = "#FF69B4",
fill = "darkblue",
alpha = 0.3) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 7),
limits = c(1, 7)) +
theme_minimal()
ggplot(data = data_after_exclusions,
aes(x = mean_self_report)) +
geom_histogram(binwidth = 0.1, boundary = 0) +
# more intelligent choices for the binwidth and boundary
geom_density(adjust = 1, # the degree of smoothing can be adjusted here
color = "#FF69B4",
fill = "darkblue",
alpha = 0.3) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 7),
limits = c(1, 7)) +
theme_minimal()
ggplot(data = data_after_exclusions,
aes(x = mean_self_report)) +
geom_histogram(binwidth = 1, boundary = 0) +
# more intelligent choices for the binwidth and boundary
geom_density(adjust = 1, # the degree of smoothing can be adjusted here
color = "#FF69B4",
fill = "darkblue",
alpha = 0.3) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 7),
limits = c(1, 7)) +
theme_minimal()
ggplot(data = data_after_exclusions,
aes(x = mean_self_report)) +
geom_histogram(binwidth = 0.1, boundary = 0) +
# more intelligent choices for the binwidth and boundary
geom_density(adjust = 1, # the degree of smoothing can be adjusted here
color = "#FF69B4",
fill = "darkblue",
alpha = 0.3) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 7),
limits = c(1, 7)) +
theme_minimal()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_density(adjust = 1, # the degree of smoothing can be adjusted here
color = "#FF69B4",
fill = "darkblue",
alpha = 0.3) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 7),
limits = c(1, 7)) +
theme_minimal()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_density(adjust = 1, # the degree of smoothing can be adjusted here
color = "#FF69B4",
fill = "darkblue",
alpha = 0.3) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(1, 10)) +
theme_minimal()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_density(adjust = 1, # the degree of smoothing can be adjusted here
color = "#FF69B4",
fill = "darkblue",
alpha = 0.3) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(1, 1)) +
theme_minimal()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_density(adjust = 1, # the degree of smoothing can be adjusted here
color = "#FF69B4",
fill = "darkblue",
alpha = 0.3) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1)) +
theme_minimal()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_density(adjust = 1, # the degree of smoothing can be adjusted here
color = "#FF69B4",
fill = "darkblue",
alpha = 0.3) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1)) +
theme_friends()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_density(adjust = 1, # the degree of smoothing can be adjusted here
color = "#FF69B4",
fill = "darkblue",
alpha = 0.3) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1)) +
# labeling of the axis points
scale_y_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 5)) +
theme_friends()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_density(adjust = 1, # the degree of smoothing can be adjusted here
color = "#FF69B4",
fill = "darkblue",
alpha = 0.3) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1),
name = "AMP score") +
# labeling of the axis points
scale_y_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 5),
name = "Frequency") +
theme_friends()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_density(adjust = 1, # the degree of smoothing can be adjusted here
color = "Orange",
fill = "Teal",
alpha = 0.3) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1),
name = "AMP score") +
# labeling of the axis points
scale_y_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 5),
name = "Frequency") +
theme_friends()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_density(adjust = 1, # the degree of smoothing can be adjusted here
color = "#FF6A00",
fill = "#6CACE4",
alpha = 0.3) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1),
name = "AMP score") +
# labeling of the axis points
scale_y_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 5),
name = "Frequency") +
theme_friends()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_density(adjust = 1, # the degree of smoothing can be adjusted here
color = "#FF6A00",
fill = "#6CACE4",
alpha = 0) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1),
name = "AMP score") +
# labeling of the axis points
scale_y_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 5),
name = "Frequency") +
theme_friends()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_density(adjust = 1, # the degree of smoothing can be adjusted here
color = "#FF6A00",
fill = "#6CACE4",
alpha = 0.3) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1),
name = "AMP score") +
# labeling of the axis points
scale_y_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 5),
name = "Frequency") +
theme_friends()
ggplot(data = data_after_exclusions,
aes(x = amp_score)) +
# more intelligent choices for the binwidth and boundary
geom_density(adjust = 1, # the degree of smoothing can be adjusted here
color = "#FF6A00",
fill = "#6CACE4",
alpha = 0.3) +
# labeling of the axis points
scale_x_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 1),
name = "AMP score") +
# labeling of the axis points
scale_y_continuous(breaks = scales::breaks_pretty(n = 10),
limits = c(0, 5),
name = "Density") +
theme_friends()
# create the summary values to be plotted
summary_amp <- data_after_exclusions %>%
group_by(gender) %>%
summarize(amp_mean = mean(amp_score),
amp_se = plotrix::std.error(amp_score))
# plot these values
ggplot(data = summary_amp,
aes(x = gender,
y = amp_mean)) +
geom_col() +
# geom_bar(stat = "identity") + # NB geom_col is equivalent to geom_bar when stat == "identity
geom_linerange(aes(ymin = amp_mean - amp_se,
ymax = amp_mean + amp_se))
ggplot(data = summary_amp,
aes(x = gender,
y = amp_mean)) +
geom_col(fill = "#0b6623", # note that you can specify specific colors using hex codes or names
color = "black",
width = 0.6) +
geom_errorbar(aes(ymin = amp_mean - amp_se,
ymax = amp_mean + amp_se),
width = 0.1,
color = "black") +
labs(title = "Bar Plot of with Standard Errors",
x = "Gender",
y = "Mean AMP score") +
theme_linedraw()
View(data_processed)
View(data_after_exclusions)
ggplot(data = data_processed,
aes(x = gender,
y = mean_self_report)) +
geom_col(fill = "#0b6623", # note that you can specify specific colors using hex codes or names
color = "black",
width = 0.6) +
#  geom_errorbar(aes(ymin = amp_mean - amp_se,
#                    ymax = amp_mean + amp_se),
#                width = 0.1,
#                color = "black") +
labs(title = "Bar Plot of mean self report values with standard errors",
x = "Gender",
y = "Mean Self Report score") +
theme_linedraw()
summary_sr <- data_after_exclusions %>%
group_by(gender) %>%
summarize(sr_mean = mean(mean_self_report),
sr_std = plotrix::std.error(mean_self_report))
ggplot(data = summary_sr,
aes(x = gender,
y = mean_self_report)) +
geom_col(fill = "#0b6623", # note that you can specify specific colors using hex codes or names
color = "black",
width = 0.6) +
geom_errorbar(aes(ymin = sr_mean - sr_std,
ymax = sr_mean + sr_std),
width = 0.1,
color = "black") +
labs(title = "Bar Plot of mean self report values with standard errors",
x = "Gender",
y = "Mean Self Report score") +
theme_linedraw()
View(summary_sr)
summary_sr <- data_after_exclusions %>%
group_by(gender) %>%
summarize(sr_mean = mean(mean_self_report),
sr_std = plotrix::std.error(mean_self_report))
ggplot(data = summary_sr,
aes(x = gender,
y = sr_mean)) +
geom_col(fill = "#0b6623", # note that you can specify specific colors using hex codes or names
color = "black",
width = 0.6) +
geom_errorbar(aes(ymin = sr_mean - sr_std,
ymax = sr_mean + sr_std),
width = 0.1,
color = "black") +
labs(title = "Bar Plot of mean self report values with standard errors",
x = "Gender",
y = "Mean Self Report score") +
theme_linedraw()
ggplot(data = summary_sr,
aes(x = gender,
y = sr_mean)) +
geom_col(fill = "#0b6623", # note that you can specify specific colors using hex codes or names
color = "black",
width = 0.6) +
geom_errorbar(aes(ymin = sr_mean - sr_std,
ymax = sr_mean + sr_std),
width = 0.1,
color = "black") +
labs(title = "Bar Plot of mean self report values with standard errors",
x = "Gender",
y = "Mean Self Report score") +
coord_flip() +
theme_linedraw()
