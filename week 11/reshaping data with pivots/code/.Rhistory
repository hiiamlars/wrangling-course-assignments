# set knit options
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
# disable scientific notation
options(scipen = 999)
dir.create("plots")
library(dplyr)
library(tidyr)
library(tibble)
library(faux)
install.packages("devtools")
install.packages("devtools")
devtools::install_github("debruine/faux")
devtools::install_github("debruine/faux")
install.packa
library(faux)
library(janitor)
library(ggplot2)
library(scales)
library(psych)
library(readr)
library(knitr)
library(kableExtra)
# set seed for reproducibility
set.seed(123)
# generate data
data_wide <-
faux::rnorm_multi(n = 100,
vars = 5,
mu = 3,
sd = 1,
r = 0.5,
varnames = paste0("item_", 1:5),
empirical = FALSE) %>%
rownames_to_column(var = "id")
# recode responses less than 1 or more than 5 to those values, then round scores to whole numbers
# note that {faux} has functions for doing this better
data_wide_likert <- data_wide %>%
mutate(across(starts_with("item_"), ~ round_half_up(.x, digits = 0))) %>%
mutate(across(starts_with("item_"), ~ ifelse(.x < 1, 1, ifelse(.x > 5, 5, .x))))
View(data_wide)
View(data_wide_likert)
res_alpha <- data_wide_likert %>%
select(starts_with("item_")) %>%
psych::alpha()
cronbachs_alpha_estimate <- res_alpha$total$raw_alpha |>
round_half_up(digits = 2)
ggplot(data_wide_likert, aes(x = item_1)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_linedraw()
ggplot(data_wide_likert, aes(x = item_2)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_linedraw()
ggplot(data_wide_likert, aes(x = item_3)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_linedraw()
ggplot(data_wide_likert, aes(x = item_4)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_linedraw()
ggplot(data_wide_likert, aes(x = item_5)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_linedraw()
data_long <- data_wide_likert %>%
pivot_longer(cols = starts_with("item_"),
names_to = "item",
values_to = "response")
ggplot(data_long, aes(x = response)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_linedraw() +
facet_wrap(~ item)
data_long <- data_wide_likert %>%
pivot_longer(cols = starts_with("item_"),
names_to = "item",
values_to = "response")
ggplot(data_long, aes(x = response)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_friends() +
facet_wrap(~ item)
data_long <- data_wide_likert %>%
pivot_longer(cols = starts_with("item_"),
names_to = "item",
values_to = "response")
ggplot(data_long, aes(x = response)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_linedraw() +
facet_wrap(~ item)
sum_scores <- data_long %>%
group_by(id) %>%
summarise(sum_score = sum(response))
ggplot(sum_scores, aes(x = sum_score)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
scale_x_continuous(breaks = breaks_pretty(n = 10)) +
theme_linedraw()
data_wide_again <- data_long %>%
pivot_wider(names_from = item,
values_from = response)
sessionInfo()
library(ThemePark)
data_long <- data_wide_likert %>%
pivot_longer(cols = starts_with("item_"),
names_to = "item",
values_to = "response")
ggplot(data_long, aes(x = response)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_friends() +
facet_wrap(~ item)
ggplot(data_wide_likert, aes(x = item_1)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_friends()
ggplot(data_wide_likert, aes(x = item_2)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_friends()
ggplot(data_wide_likert, aes(x = item_3)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_friends()
ggplot(data_wide_likert, aes(x = item_4)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_friends()
ggplot(data_wide_likert, aes(x = item_5)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_friends()
ggplot(sum_scores, aes(x = sum_score)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
scale_x_continuous(breaks = breaks_pretty(n = 10)) +
theme_friends()
data_long <- data_wide_likert %>%
pivot_longer(cols = starts_with("item_"),
names_to = "item",
values_to = "likert_response")
View(data_long)
?pivot_longer()
data_long <- data_wide_likert %>%
pivot_longer(cols = starts_with("item_1"),
names_to = "item",
values_to = "likert_response")
View(data_long)
data_long <- data_wide_likert %>%
pivot_longer(cols = starts_with("item_"),
names_to = "item",
values_to = "likert_response")
View(data_wide_likert)
View(data_long)
data_longer_with_sum_score <- data_item_and_sum_scores |>
pivot_longer(cols = starts_with("item_"), #positive selection
names_to = "item",
values_to = "likert_response")
data_item_and_sum_scores <- data_wide_again %>%
left_join(sum_scores, by = "id")
data_longer_with_sum_score <- data_item_and_sum_scores |>
pivot_longer(cols = starts_with("item_"), #positive selection
names_to = "item",
values_to = "likert_response")
data_wide_again <- data_long %>%
pivot_wider(names_from = item,
values_from = response)
sum_scores <- data_long %>%
group_by(id) %>%
summarise(sum_score = sum(response))
data_long <- data_wide_likert %>%
pivot_longer(cols = starts_with("item_"), #positive selection
names_to = "item",
values_to = "response")
ggplot(data_long, aes(x = response)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_friends() +
facet_wrap(~ item) #for each level in the column "item"
ggplot(data_long, aes(x = response)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_friends() +
facet_wrap(~ item) #for each level in the column "item"
- What other ways could you specify this pivot_longer call's arguments?
```{r}
sum_scores <- data_long %>%
group_by(id) %>%
summarise(sum_score = sum(response))
ggplot(sum_scores, aes(x = sum_score)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
scale_x_continuous(breaks = breaks_pretty(n = 10)) +
theme_friends()
## Convert this long data back to wide
Just to know how to do it.
```{r}
data_wide_again <- data_long %>%
pivot_wider(names_from = item,
values_from = response)
## Combine item and sum scores in one data frame
```{r}
data_item_and_sum_scores <- data_wide_again %>%
left_join(sum_scores, by = "id")
View(data_item_and_sum_scores)
